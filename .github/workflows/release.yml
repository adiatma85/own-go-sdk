name: "Production: Release"

on:
  workflow_dispatch:
    inputs:
      versionbump:
        description: "Version Bump"
        type: choice
        required: true
        options:
          - "patch"
          - "minor"
          - "major"


jobs:
  release:
    timeout-minutes: 30
    runs-on: ubuntu-latest
  
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Setup Go environment
        uses: actions/setup-go@v3.3.1
        with:
          go-version: 1.21
          cache: true
      
      - name: Get Latest Tag
        id: latest-tag
        run: |
          git config --global --add safe.directory /github/workspace
          echo "tag=$(git tag -l | grep -v -E '^.*-hotfix\..*$' | sed '/-/!{s/$/_/;}' \
            | sort -V | sed 's/_$//' | tail -1)" >> "$GITHUB_OUTPUT"
      
      - name: Generate New Bumped Version
        uses: DelosAqua/action-bump-semver@v1.1.0
        id: bump-semver
        with:
          current_version: ${{ steps.latest-tag.outputs.tag }}
          level: ${{ github.event.inputs.versionbump }}

      - name: Check Semver Format
        run: ./utils/semver -v ${{ steps.bump-semver.outputs.new_version }}

      - name: Create Release Notes
        id: create-release
        run: |
          curl -f -X POST -H "Accept: application/vnd.github.v3+json" \
            -H "authorization: Bearer ${{ secrets.TOKEN_GITHUB }}" \
            https://api.github.com/repos/${{ github.repository }}/releases \
            -d '{"tag_name":"${{ steps.bump-semver.outputs.new_version }}", "generate_release_notes":true}'

      # Below is for notification
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44.3.0
        with:
          separator: "----------------------"
      - name: List all changed files
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "$file was changed"
          done
      - uses: benjlevesque/short-sha@v2.1
        id: short-sha
        with:
          length: 7
      
      - name: Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          DISCORD_USERNAME: ${{ secrets.DISCORD_USERNAME }}
          DISCORD_AVATAR: ${{ secrets.DISCORD_AVATAR }}
          DISCORD_EMBEDS: '[    { 
            "author": {  "icon_url": "https://avatars.githubusercontent.com/${{ github.actor }}", "name": "${{ github.actor }}", "url": "https://github.com/${{github.actor}}" },
            "url": "https://github.com/${{github.repository}}/commit/${{github.sha}}",
            "fields": [
            { "name": "Repository", "value": "[${{github.event.repository.name}}](${{github.event.repository.clone_url}})", "inline": true },
            { "name": "Branch", "value": "[${{github.ref_name}}](https://github.com/${{github.repository}}/tree/${{github.ref_name}})", "inline": true },
            { "name": "Event", "value": "${{github.event_name}}", "inline": true },
            { "name": "Job", "value": "${{github.job}}", "inline": true },
            { "name": "Commit Message", "value": "[${{ steps.short-sha.outputs.sha }}](https://github.com/${{github.repository}}/commit/${{github.sha}}) - `${{github.event.head_commit.message}}`" },
            { "name": "Changed Files", "value": "${{ steps.changed-files.outputs.all_changed_files }}" },
            { "name": "Author", "value": "[${{github.event.head_commit.author.name}}](https://github.com/${{github.actor}})" }
            ],
            "color":1127128,
            "timestamp": "${{github.event.head_commit.timestamp}}",
            "footer":{"text": "${{github.event.head_commit.timestamp}}"}
            }    ]'
        uses: Ilshidur/action-discord@master
        with:
          args: 'The project ${{ github.repository }} has been built.'